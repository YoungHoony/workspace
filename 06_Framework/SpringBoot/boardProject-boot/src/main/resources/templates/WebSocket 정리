WebSocket
- 비동기 통신 : 기다리는 것 없이, 동시에 작동하는 것
                ajax -> 비동기 (요청하면 응답하는 형태, 요청 -> 응답 == 단방향 통신))
- ** 전이중 통신(양방향 통신) 

(단방향 ex : 무전기)
(양방향 ex : 전화)

- 양방향 통신을 지원하는 프로토콜 (규약)
  (http://주소, ftp://주소(파일을 왔다갔다), websocket://주소(websocket으로 보낸다, 직접적으로 볼일을 없다))

- 실 시간 데이터 교환 (클라이언트 <-> 서버)
  ex) * 알림 (서버 메세지 -> 클라이언트에게 실시간 전달)
      * 채팅 (클라이언트A <-> 서버 <-> 클라이언 B 실시간 수행 )
---------------------------------------------
+ form, a, location.href (태그) -> 동기식
                
************ SockJs **************************
 (js 라이브러리 형식으로 추가, spring-web 기본 내장 ) (프레임워크)
- websocket을 보완, 개선한 websocket 프레임워크 (맞춰서 쓰기만 하게 해주는 프로그램) 
    == myBatis 같은 프레임워크임

- 간단히 사용이 가능함
- 브라우저 호환성 (크로스 브라우저)

-- 순서

1) WebsocketConfig 만들기(설정 파일) 
  - 어떤 주소로 웹소켓 요청이 왔을 때
    이를 처리하기 위한 웹소켓 핸들러(==처리기) 객체와 연결 설정

  - 어떤 주소에서 웹소켓 요청이 오는 것을 허용할지 설정

  - SockJs 사용 설정

2) WebsocketHandler
  - 웹소켓 요청을 어떻게 처리할지 정의하는 클래스

  1) 클라이언트 연결이 완료되고 통신할 준비가 될 때 수행     
  2) 클라이언트로 부터 메시지를 받았을 때 수행
  3) 클라이언트 연결이 종료될 때 수행

  *** 중요! ***
  - 요청한 클라이언트의 session을 모아서 다룰 수 있음
    ->  조건 : 웹소켓 사용 페이지에 접속한 클라이언트의 
               session을 가로채서 가져와야된다!! (소매치기)

3) HandshakeInterceptor 
  - session을 가로채는 내용을 정의하는 클래스
  - session 전체?, session 내 일부 데이터만? 형식의 코드 작성
  
